{
  "name": "grunt-ember-templates",
  "description": "Compile Handlebars templates for Ember in Grunt. Features destination:source file arguments and customizable template names.",
  "version": "0.4.23",
  "homepage": "https://github.com/dgeb/grunt-ember-templates",
  "author": {
    "name": "Dan Gebhardt",
    "url": "http://cerebris.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dgeb/grunt-ember-templates.git"
  },
  "bugs": {
    "url": "https://github.com/dgeb/grunt-ember-templates/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/dgeb/grunt-ember-templates/blob/master/LICENSE"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.19"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-internal": "~0.4.2",
    "grunt": "~0.4.0",
    "ember-template-compiler": ">=1 <1.9"
  },
  "peerDependencies": {
    "grunt": "~0.4.0",
    "ember-template-compiler": ">=1 <1.9"
  },
  "keywords": [
    "gruntplugin",
    "ember",
    "handlebars"
  ],
  "readme": "# grunt-ember-templates [![Build Status](https://secure.travis-ci.org/dgeb/grunt-ember-templates.png?branch=master)](http://travis-ci.org/dgeb/grunt-ember-templates)\n\n> Precompile Handlebars templates for [Ember.js](http://emberjs.com).\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-ember-templates --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-ember-templates');\n```\n\n### Overview\n\nInside your `Gruntfile.js` file, add a section named `emberTemplates`. This section specifies the files to compile and the options used with [handlebars](http://handlebarsjs.com/).\n\n##### files\n\nType: `object`\n\nThis defines what files this task will process and should contain key:value pairs.\n\nThe key (destination) should be an unique filepath (supports [grunt.template](http://gruntjs.com/api/grunt.template)) and the value (source) should be a filepath or an array of filepaths (supports [minimatch](https://github.com/isaacs/minimatch)).\n\nNote: Values are precompiled to the `Ember.TEMPLATES` array in the order passed.\n\n##### options\n\nType: `object`\n\nThis controls how this task operates and should contain key:value pairs. See specific options below.\n\n#### Options\n\n##### amd\n\nType: `boolean | string`\nDefault: `false`\n\nInclude this option to ensure that the compiled output will be defined as a\nsingle AMD module with a single dependency (`ember`). If you'd like to output\nindividual templates as modules, skip this option and use the\n`templateRegistration` option described below.\n\nIf you'd like to customize the module name for Ember, pass this option a string.\n(For backwards compatibility, the string `\"true\"` acts like the boolean `true`,\nand will result in `ember` being used as the module name. )\n\n``` javascript\noptions: {\n  amd: \"vendor/ember\"\n}\n```\n\n##### concatenate\n\nType: `boolean`\nDefault: `true`\n\nDisable this option to compile the templates to multiple individual files,\nrather than concatenating them into a single file. When concatenation is\ndisabled, the destination property specifies the folder where compiled templates\nwill be placed. The directory and file structure will mirror the source.\n\nThis option is useful for situations where you'd like to let a build optimizer\nconcatenate files in particular ways.\n\n``` javascript\noptions: {\n  concatenate: false\n},\nfiles: {\n  \"path/to/destination/folder\": [\"path/to/sources/*.handlebars\", \"path/to/more/*.handlebars\"]\n}\n```\n\n##### precompile\n\nType: `boolean`\nDefault: `true`\n\nDisable this option to skip template precompilation with handlebars.js and instead\nwrap the template content with `Ember.Handlebars.compile`. This will reduce template\ncompilation time during development. **Don't disable this option for production build**.\n\n##### preprocess\n\nType: `function`\nArguments: `source`\n\nThis option accepts a function which can be used to preprocess the raw contents\nof the source read from the template file.\n\nYou may want to use this function to strip comments or minify whitespace:\n\n``` javascript\noptions: {\n  preprocess: function(source) {\n    return source.replace(/\\s+/g, ' ');\n  }\n}\n```\n\n##### templateBasePath\n\nType: `regex | string`\n\nA regex or string to match the base path to your template directory. If defined,\nthis path will be stripped out of template names by the default implementation\nof `templateNameFromFile()`.\n\n``` javascript\noptions: {\n  templateBasePath: /path\\/to\\/templates\\//\n}\n```\n\n##### templateFileExtensions\n\nType: `regex | string`\nDefault: `/\\.(hbs|hjs|handlebars)/`\n\nA regex or string to match the file extensions for your templates. Extensions\nwill be stripped out of template names by the default implementation of\n`templateNameFromFile()`.\n\nFor example, if you're using a non-standard extension for your template files,\nyou can strip it out like so:\n\n``` javascript\noptions: {\n  templateFileExtensions: /\\.hbars/\n}\n```\n\n##### templateName\n\nType: `function`\nArguments: `fileName`\n\nThis option accepts a function which takes one argument (the source template\nfilepath, which has already been stripped of its file extensions and base directory)\nand returns a string which will be used as the key for the precompiled template.\n\nFor example, let's say that all of your templates are suffixed with `_template`,\nwhich you don't want included in the actual template name. You could strip off\nthis suffix as follows:\n\n``` javascript\noptions: {\n  templateName: function(name) {\n    return name.replace('_template', '');\n  }\n}\n```\n\n##### templateNameFromFile\n\nType: `function`\nArguments: `filePath`\n\nThis option accepts a function which takes one argument (the full source template\nfilepath) and returns a string which will be used as the key for the precompiled\ntemplate object.\n\nBy default, this function strips away `templateBasePath` and `templateFileExtensions`\nfrom a filepath, and then returns the result of `templateName()`.\n\nThis function should only be overridden if you need complete control over the\nreturned template name that can not be achieved via the other options.\n\n##### templateRegistration\n\nType: `function`\nArguments: `name`, `contents`\n\nThis option allows for custom registration of templates. It accepts a function\nwhich takes as arguments the `name` of a template (see`templateNameFromFile`)\nand its `contents` (which may be compiled or not - see `precompile`). This\nfunction should return a string of JS code to be added to the generated file.\n\nBy default, this function assigns templates to `Ember.TEMPLATES` with their\n`name` as the key and `contents` as the value.\n\nThis function should be overridden if you need to register templates in an\nalternative fashion. For example, it could be used to define custom modules for\neach of your templates:\n\n``` javascript\noptions: {\n  templateRegistration: function(name, contents) {\n    return \"define('templates/\" + name + \"', ['ember'], function(Ember) { return \" + contents + \"; });\";\n  }\n}\n```\n\n##### templateCompilerPath and handlebarsPath\n\nType: `string`\nDefault: Not specified\n\nBy default, the template compiler and Handlebars included with the\n`ember-template-compiler` dependency will be used to compile templates.\n\nThis option allows these defaults to be overridden in order to specify\ndifferent versions of the template compiler and Handlebars.\n\nFor example, if there are upstream changes in Ember's compiler that haven't yet\nbeen published with `ember-template-compiler`, you could specify paths to local\nversions of the template compiler and Handlebars as follows:\n\n```javascript\noptions: {\n  templateCompilerPath: 'vendor/ember/ember-template-compiler.js',\n  handlebarsPath: 'vendor/handlebars/handlebars.js'\n}\n```\n\nIMPORTANT: These options must both be specified, or neither will take effect.\n\n#### Config Example\n\nA common configuration might be to combine the `amd` and `templateBasePath` options\nas follows:\n\n``` javascript\nemberTemplates: {\n  compile: {\n    options: {\n      amd: true,\n      templateBasePath: /path\\/to\\//\n    },\n    files: {\n      \"path/to/result.js\": \"path/to/source.handlebars\",\n      \"path/to/another.js\": [\"path/to/sources/*.handlebars\", \"path/to/more/*.handlebars\"]\n    }\n  }\n}\n```\n\nHere's an example task that watches for changes to your templates and automatically recompiles them:\n\n``` javascript\nwatch: {\n  emberTemplates: {\n    files: 'app/scripts/**/*.handlebars',\n    tasks: ['emberTemplates', 'livereload']\n  },\n}\n```\n\n### Usage Tips\n\n* This plugin was designed to work with Grunt 0.4.x. If you're still using grunt\n  v0.3.x it's strongly recommended that [you upgrade](http://gruntjs.com/upgrading-from-0.3-to-0.4),\n  but in case you can't please use [v0.3.2](https://github.com/dgeb/grunt-ember-templates/tree/grunt-0.3-stable).\n\n* Check the *Release History* below for version compatibility with Ember and\n  Handlebars. The latest version of this plugin tends to track ember-latest, so\n  you may need an older version to work with the latest *official release* of Ember.\n\n* Remember to name partial templates with a leading underscore. This underscore\n  will be preserved in the compiled template name. For instance,\n  `post/_edit.hbs` will be registered as `Ember.TEMPLATES[\"post/_edit\"]`.\n\n## Credit\n\nMany thanks to the following projects upon which this was based:\n\n* [grunt-contrib-handlebars](https://github.com/gruntjs/grunt-contrib-handlebars) by [Tim Branyen](https://github.com/tbranyen)\n* [grunt-ember-handlebars](https://github.com/yaymukund/grunt-ember-handlebars) by [Mukund Lakshman](https://github.com/yaymukund)\n\nI created this project as an alternative to grunt-ember-handlebars for the following reasons:\n* to provide maximum compatibility with the grunt-contrib project, using features such as destination:source file arguments\n* to allow for customizable template names based upon source file paths\n\n## Release History\n\n* 2014/10/29 - v0.4.23 - Fixed peer dependencies issue for `ember-template-compiler` 1.8.x\n* 2014/10/23 - v0.4.22 - Updated `ember-template-compiler` peer dependencies for Handlebars 1.x compatibility. Thanks @cyril-sf!\n* 2014/04/02 - v0.4.21 - Introduced `concatenate` option. Thanks @joshvfleming!\n* 2014/03/11 - v0.4.20 - `amd` option can now accept a string to define Ember's module name. Thanks @Kerrick!\n* 2014/03/02 - v0.4.19 - Require node to be >= 0.8.19 to avoid peerDependencies issue. Thanks @rjackson!\n* 2013/12/04 - v0.4.18 - Introduced `ember-template-compiler` dependency. Thanks @rjackson!\n* 2013/11/20 - v0.4.17 - Added `templateCompilerPath` and `handlebarsPath` option. Thanks @rjackson!\n* 2013/11/04 - v0.4.16 - Added `preprocess` option. Thanks @timrwood!\n* 2013/09/25 - v0.4.15 - Added `templateRegistration` option. Thanks @lukemelia!\n* 2013/09/05 - v0.4.14 - Now using lowercase module name `ember` with `amd` option. Thanks @rpflorence!\n* 2013/09/01 - v0.4.13 - Upgraded ember-template-compiler.js to 1.0.0 (woot!). Added `precompile` option - thanks @manoharank!\n* 2013/08/19 - v0.4.12 - Added `templateBasePath` alias to `templateBaseDir`. Default `templateFileExtensions` now also include `.hjs`.\n* 2013/08/18 - v0.4.11 - Upgraded ember-template-compiler.js to 1.0.0-rc.7. Plus new `amd`, `templateBaseDir`, `templateFileExtensions`, and `templateNameFromFile` options.\n* 2013/06/25 - v0.4.10 - Upgraded Handlebars to 1.0.0.\n* 2013/06/24 - v0.4.9 - Upgraded ember-template-compiler.js to 1.0.0-rc.6\n* 2013/06/09 - v0.4.8 - Upgraded ember-template-compiler.js to 1.0.0-rc.5 - thanks @AdamFerguson!\n* 2013/05/22 - v0.4.7 - Deprecate `ember_templates` task in favor of `emberTemplates`.\n* 2013/05/16 - v0.4.6 - Upgraded Handlebars to 1.0.0-rc4.\n* 2013/05/03 - v0.4.5 - Fixed multi-file output - thanks @seankeating!\n* 2013/04/05 - v0.4.4 - Ember v1.0.0-rc.2 compatible.\n* 2013/02/18 - v0.4.3 - Upgraded to grunt 0.4.0 final.\n* 2013/02/17 - v0.4.3rc8 - Now uses ember-template-compiler. Upgraded to grunt 0.4.0.rc8.\n* 2013/02/06 - v0.4.3rc7 - Updated to latest handlebars for compatibility with latest ember - thanks @codeofficer!\n* 2013/01/24 - v0.4.2rc7 - Upgraded for grunt 0.4.0rc7 and handlebars 1.0.rc.2 - thanks @GManzato!\n* 2013/01/10 - v0.4.2rc5 - Upgraded for grunt 0.4.0rc5 - thanks @trev!\n* 2013/01/01 - v0.4.1 - Fixed file pattern matching\n* 2012/12/26 - v0.4.0 - Upgraded for grunt 0.4.0 compatibility - thanks @trek!\n* 2013/03/07 - v0.3.2 - Backported ember-template-compiler for Grunt 0.3 compatibility - thanks @rafshar\n* 2013/01/24 - v0.3.1 - Fixed grunt-contrib-lib dependency\n* 2013/01/24 - v0.3.0 - Grunt 0.3.0 and Handlebars 1.0.rc.2 compatible - thanks @GManzato!\n* 2012/10/11 - v0.2.0 - Renamed grunt-ember-templates from grunt-contrib-ember.\n* 2012/09/28 - v0.1.0 - Initial release.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-ember-templates@0.4.23",
  "dist": {
    "shasum": "f2b705f578b9558809cf0124170761e47da5fad6"
  },
  "_from": "grunt-ember-templates@0.4.23",
  "_resolved": "https://registry.npmjs.org/grunt-ember-templates/-/grunt-ember-templates-0.4.23.tgz"
}
